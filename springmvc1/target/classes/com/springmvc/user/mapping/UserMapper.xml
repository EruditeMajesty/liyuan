<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.user.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.springmvc.user.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="passWord" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,username,password,email,mobile,
    regtime,regip,lastlogintime,lastloginip,status,
    createname,updatename,createtime,updatetime,age
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.springmvc.user.domain.User" >
    insert into user (
    <include refid="Base_Column_List" />
    )
    values (#{id,jdbcType=VARCHAR},
		    #{userName,jdbcType=VARCHAR}, 
		    #{passWord,jdbcType=VARCHAR}, 
		    #{email,jdbcType=VARCHAR}, 
		    #{mobile,jdbcType=VARCHAR}, 
		    #{regTime,jdbcType=TIMESTAMP}, 
		    #{regIp,jdbcType=VARCHAR}, 
		    #{lastLoginTime,jdbcType=TIMESTAMP}, 
		    #{lastLoginIp,jdbcType=VARCHAR}, 
		    #{status,jdbcType=VARCHAR}, 
		    #{createName,jdbcType=VARCHAR}, 
		    #{updateName,jdbcType=VARCHAR}, 
		    #{createTime,jdbcType=TIMESTAMP}, 
		    #{updateTime,jdbcType=TIMESTAMP}, 
		    #{age,jdbcType=INTEGER})
  </insert>
<!--   <insert id="insertSelective" parameterType="com.springmvc.user.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
 -->  
 	
 	<!-- <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.user.domain.User" >
    update user
    <set >
      <if test="userName != null" >
        username = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update> -->
  
  <!-- 修改用户名和密码 -->
  <update id="updateByPrimaryKey" parameterType="com.springmvc.user.domain.User" >
    update user
    set username = #{userName,jdbcType=VARCHAR},
      password = #{passWord,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据用户名和密码查询是否有对象的user对象 -->
  <select id="selectByNameAndPassword" parameterType="com.springmvc.user.domain.User" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
    and password = #{passWord,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据名字查询一个user对象集合 -->
  <select id="getUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
</mapper>