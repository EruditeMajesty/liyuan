<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.menuManage.dao.MenuDao" >
  <resultMap id="BaseResultMap" type="com.springmvc.menuManage.domain.MenuDto" >
    <id column="menuId" property="menuId" jdbcType="VARCHAR" />
    <result column="upperMenuId" property="upperMenuId" jdbcType="VARCHAR" />
    <result column="menuLevel" property="menuLevel" jdbcType="VARCHAR" />
    <result column="menuName" property="menuName" jdbcType="VARCHAR" />
    <result column="menuStatus" property="menuStatus" jdbcType="VARCHAR" />
    <result column="menuLocation" property="menuLocation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    menuId, upperMenuId, menuLevel, menuName ,menuStatus ,menuLocation
  </sql>
  <!-- 按照主键查询菜单 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from menu
    where menuId = #{menuId,jdbcType=VARCHAR}
  </select>
   <!-- 按照主键删除菜单 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from menu
    where menuId = #{menuId,jdbcType=VARCHAR}
  </delete>
  
  <!--按照菜单等级查询菜单  -->
  <select id="findMenuListByMenuLevel" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from menu
    where menuLevel = #{menuLevel,jdbcType=VARCHAR}
    order by menuOrder
  </select>
  
  <!-- 按照上级菜单查询下级菜单 -->
  <select id="findLeftMenuListById" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from menu
    where upperMenuId = #{upperMenuId,jdbcType=VARCHAR}
    order by menuOrder
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from menu
    where menuStatus = "1"
  </select>
  <!-- <insert id="insert" parameterType="com.test.domain.User" >
    insert into user_t (id, user_name, password, 
      age)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.test.domain.User" >
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.domain.User" >
    update user_t
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  修改用户名和密码
  <update id="updateByPrimaryKey" parameterType="com.test.domain.User" >
    update user_t
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  根据用户名和密码查询是否有对象的user对象
  <select id="selectByNameAndPassword" parameterType="com.test.domain.User" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from user_t
    where user_name = #{userName,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
  </select>
  
  根据名字查询一个user对象集合
  <select id="getUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from user_t
    where user_name = #{userName,jdbcType=VARCHAR}
  </select> -->
</mapper>